#Updated at Wed Apr 28 11:44:31 GMT-03:00 2010
#Wed Apr 28 11:44:31 GMT-03:00 2010
#jdbc.driver=org.postgresql.Driver
#jdbc.url=jdbc:postgresql://localhost:5432/marketmobile
#jdbc.user=marketmobile
#jdbc.password=123456

#Using JNDI

jdbc.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

jdbc.jndi=marketmobile

db.pool.acquire_increment=10
db.pool.timeout=180
db.pool.minPoolSize=10
db.pool.maxPoolSize=20
db.pool.maxIdleTime=180

# idleConnectionTestPeriod - This sets the time (in minutes), for a connection to remain idle before sending a test query to the DB. This is useful to prevent a DB from timing out connections on its end
db.pool.bonecp.idleConnectionTestPeriod=60
# idleMAxAge - The time (in minutes), for a connection to remain unused before it is closed off
db.pool.bonecp.idleMaxAge=240
db.pool.bonecp.maxConnectionsPerPartition=30
db.pool.bonecp.minConnectionsPerPartition=10
# partitionCount
# Sets number of partitions to use. In order to reduce lock contention and thus improve performance, 
# each incoming connection request picks off a connection from a pool that has thread-affinity, i.e. pool[threadId % partition_count]. 
# The higher this number, the better your performance will be for the case when you have plenty of short-lived threads. 
# Beyond a certain threshold, maintenance of these pools will start to have a negative effect on performance (and only for the case when connections 
# on a partition start running out).
# Default: 1, minimum: 1, recommended: 3-4 (but very app specific)
db.pool.bonecp.partitionCount=3
db.pool.bonecp.acquireIncrement=5
# statementsCacheSize - The number of statements to cache
db.pool.bonecp.statementsCacheSize=100
db.pool.bonecp.releaseHelperThreads=3
# Query usada em teste de conexao
# Exemplo:
# Mysql: SELECT 1
# Postgres SELECT NOW()
db.pool.bonecp.connectionTestStatement=SELECT NOW()


db.show_sql=true
db.generate_statistics=false
jdbc.batch_size=50
jdbc.fetch_size=20

hibernate.connection.release_mode=after_transaction
hibernate.current_session_context_class=thread
cache.use_second_level_cache=true
hibernate.transaction.flush_before_completion=true